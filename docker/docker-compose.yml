services:
  database:
    container_name: database
    image: mariadb:latest
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - "db-volume:/var/lib/mysql"
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 5s
      retries: 5
    env_file:
      - "../.env"
    networks:
      - app-network

  check-db-started:
    container_name: db-healthcheck
    image: jwilder/dockerize:v0.9.5
    env_file:
      - "../.env"
    depends_on:
      - database
    command: ["dockerize", "-wait=tcp://database:3306", "-timeout", "30s"]
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: unless-stopped
    env_file:
      - "../.env"
    environment:
      - PMA_HOST=${MYSQL_HOST:-database}
      - PMA_PORT=${MYSQL_PORT:-3306}
    ports:
      - "${PHPMYADMIN_PORT:-5001}:80"
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    profiles:
      - admin

  { { repository } }:
    container_name: { { repository } }
    build:
      context: ..
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - "../.env"
    networks:
      - app-network
    depends_on:
      check-db-started:
        condition: service_completed_successfully
      database:
        condition: service_healthy
      events:
        condition: service_healthy

volumes:
  db-volume:

networks:
  app-network:
    driver: bridge
